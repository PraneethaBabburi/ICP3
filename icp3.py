# -*- coding: utf-8 -*-
"""ICP3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OwjB7mJgaXMqUFxMWA-RyrhRrD7iY7xE
"""

#question a
import numpy as np

#using numpy create random vector of size 15 having only integers in the range 1-20
x=np.random.randint(1,20, size=15)
print(x)

#reshape the array to 3 by 5
reshaped_x=x.reshape(3,5)
print("reshaped array is: \n", reshaped_x)

#print the array shape
print("array shape is: ", reshaped_x.shape)

#replace the max in each row by 0
new_x=np.where(reshaped_x==[[i] for i in np.amax(reshaped_x,axis=1)],0,reshaped_x)
print("array after replacing the max in each row by 0: \n",new_x)

#create a 2 dimensional array of size 4x3 (composed of 4byte integer elements), also print the shape, type, and data type of the array
import numpy as np

#create a 2 dimensional array of size 4x3 (composed of 4byte integer elements)
x=np.array([[3,5,6],[7,4,2],[7,5,9],[1,0,4]], dtype=np.int32)
print(x)

#print the shape
print("shape of the array is: ", x.shape)

#print the type
print("type of the array is: ",type(x))

#print the data type of array
print("the data type of array is: ", x.dtype)

#question b
#write a program to compute the eigen values and right eigenvectors of a given square array: [[3 -2][1 0]]
import numpy as np
from numpy.linalg import eig

a=np.array([[3, -2],[1, 0]])
print(a)
eigen_value,eigen_vector = eig(a)
print("eigen values of the given array: ",eigen_value)
print("right eigen vecotrs of the given array: \n",eigen_vector)

#question c
#compute the sum of the diagonal element of a given array: [[0,1,2],[3,4,5]]
import numpy as np

a=np.array([[0,1,2],[3,4,5]])
diagonal_sum = np.trace(a)
print("sum of diagonal elements of given array is: ", diagonal_sum)

#question d
#write a numpy program to create a new shape to an array without changing the
#data: reshape 3x2: [[1,2],[3,4],[5,6]] reshape 2x3: [[1,2,3],[4,5,6]]
import numpy as np

a = np.array([[1,2],[3,4],[5,6]])

#reshape to 3x2
a_3x2=a.reshape(3,2)

#reshape to 2x3
a_2x3=a.reshape(2,3)

print("Reshaped array (3x2):\n", a_3x2)
print("Reshaped array (2x3):\n", a_2x3)